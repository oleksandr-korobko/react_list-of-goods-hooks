{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortBy","setSortBy","isReversed","setIsReversed","reorderedGoods","goods","sortType","visibleGoods","Alphabet","sort","goodA","goodB","localeCompare","Length","length","reverse","getReorderedGoods","className","type","classNames","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,O,eAAAA,I,eAAAA,I,uBAAAA,I,uBAAAA,I,mBAAAA,I,oBAAAA,M,KAWE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KASMC,EApCD,SACLC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUJ,EACZ,EADYA,WAENK,EAAY,YAAOF,GAEzB,OAAQC,GACN,KAAKX,EAASa,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAU7D,OAJIZ,GACFK,EAAaQ,UAGRR,EAcgBS,CACrBpB,EACA,CACEU,SAAUN,EACVE,eAIJ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYnB,IAAWL,EAASa,WAElCY,QAAS,kBAAMnB,EAAUN,EAASa,WALpC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYnB,IAAWL,EAASkB,SAElCO,QAAS,kBAAMnB,EAAUN,EAASkB,SALpC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAajB,IAEfkB,QA3Cc,kBAAMjB,GAAc,SAAAkB,GAAI,OAAMA,MAsC9C,sBAUErB,IAAWL,EAASI,MAAQG,IAC5B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAlDI,WACZjB,GAAc,GACdF,EAAUN,EAASI,OA6Cb,sBAUJ,6BACGK,EAAekB,KAAI,SAACC,GAAD,OAClB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42e767e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nenum SortType {\n  None, 'none',\n  Alphabet, 'alphabet',\n  Length, 'length',\n}\n\ntype Reordering = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: Reordering,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.Alphabet:\n      visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n      break;\n\n    case SortType.Length:\n      visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reverseToggle = () => setIsReversed(prev => (!prev));\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy(SortType.None);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType: sortBy,\n      isReversed,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortBy !== SortType.Alphabet,\n          })}\n          onClick={() => setSortBy(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortBy !== SortType.Length,\n          })}\n          onClick={() => setSortBy(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverseToggle}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== SortType.None || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map((good: string) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}